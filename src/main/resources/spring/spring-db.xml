<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <tx:annotation-driven/>

<!--    <context:property-placeholder location="classpath:dbH2/h2.properties"/>-->

<!--&lt;!&ndash;    <jdbc:initialize-database data-source="h2dataSource" enabled="${database.populate}">&ndash;&gt;-->
<!--&lt;!&ndash;        <jdbc:script location="${jdbc.initLocation}"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <jdbc:script encoding="utf-8" location="${jdbc.populateLocation}"/>&ndash;&gt;-->
<!--&lt;!&ndash;    </jdbc:initialize-database>&ndash;&gt;-->

<!--    <bean id="h2dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"-->
<!--          p:driverClassName= "${datasource.driverClassName}"-->
<!--          p:url="${datasource.url}"-->
<!--          p:username="${datasource.username}"-->
<!--          p:password="${datasource.password}"-->
<!--    />-->

<!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"-->
<!--          p:dataSource-ref="h2dataSource"-->
<!--          p:packagesToScan="model">-->

<!--        <property name="jpaPropertyMap">-->
<!--            <map>-->
<!--                <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>-->
<!--                <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}"-->
<!--                       value="${hibernate.use_sql_comments}"/>-->
<!--                <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}"-->
<!--                       value="update"/>-->
<!--            </map>-->
<!--        </property>-->

<!--        <property name="jpaVendorAdapter">-->
<!--            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"-->
<!--                  p:showSql="${jpa.showSql}">-->
<!--            </bean>-->
<!--        </property>-->
<!--    </bean>-->

<!--    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"-->
<!--          p:entityManagerFactory-ref="entityManagerFactory"/>-->

<!--    <context:property-placeholder location="classpath:/dbH2/heroku.properties" system-properties-mode="OVERRIDE"/>-->


    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </bean>

    <context:component-scan base-package="repository"/>
    <jpa:repositories base-package="repository"/>
</beans>